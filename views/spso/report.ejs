<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SPSO | Report</title>
    <link rel="icon" href="https://lms.hcmut.edu.vn/pluginfile.php/3/theme_academi/logo/1725955904/logoBK.png"
        type="image/x-icon" />
    <!-- Include Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <%- include('../partials/style'); %>
    <style>
        /* Custom styles */
        .chart-container {
            width: 80%;
            height: 80%;
            margin: auto;
        }
    </style>
</head>
<body>
    <!-- Include Navbar (if you have one) -->
    <%- include('../partials/navbar-spso'); %>
    <h1 class="mt-3 mb-3 text-center">Printing Report</h1>

    <div class="container mt-4">
        <!-- Date Range Filter -->
        <div class="row">
            <!-- Use col-12 for full width on small screens -->
            <div class="col-12 d-flex mb-2">
                <div class="mb-3 flex-grow-1 me-3 d-flex align-items-center">
                    <label for="startDate" class="form-label mb-0 me-2">From</label>
                    <input type="date" id="startDate" class="form-control w-100" onchange="updateChart()">
                </div>
                <div class="mb-2 flex-grow-1 d-flex align-items-center">
                    <label for="endDate" class="form-label mb-0 me-2">To</label>
                    <input type="date" id="endDate" class="form-control w-100" onchange="updateChart()">
                </div>
            </div>
        </div>
    
        <!-- Line Chart to display report -->
        <div class="chart-container align-items-center">
            <canvas id="printingChart"></canvas>
        </div>
    </div>    

    <!-- Include Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Include custom scripts -->
    <script>
        // Hardcoded data (example of 30 days of random printing data)
        const allData = [
            { date: "2024-11-01", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-02", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-03", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-04", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-05", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-06", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-07", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-08", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-09", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-10", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-11", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-12", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-13", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-14", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-15", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-16", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-17", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-18", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-19", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-20", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-21", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-22", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-23", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-24", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-25", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-26", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-27", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-28", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-29", pages: Math.floor(Math.random() * 50) + 1 },
            { date: "2024-11-30", pages: Math.floor(Math.random() * 50) + 1 }
        ];

        // Initialize the chart
        let ctx = document.getElementById('printingChart').getContext('2d');
        let chart = new Chart(ctx, {
            type: 'line', // Line chart
            data: {
                labels: [], // Dates will go here
                datasets: [{
                    label: 'Printing Pages',
                    data: [], // Data for printing pages will go here
                    borderColor: '#007bff',
                    fill: false
                }]
            },
            options: {
                responsive: true,
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Date'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Pages'
                        }
                    }
                }
            }
        });

        // Update the chart with filtered data based on selected date range
        function updateChart() {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            // Filter the data based on the selected date range
            const filteredData = allData.filter(item => {
                return (!startDate || item.date >= startDate) && (!endDate || item.date <= endDate);
            });

            // Update the chart data
            chart.data.labels = filteredData.map(item => item.date);
            chart.data.datasets[0].data = filteredData.map(item => item.pages);

            // Re-render the chart
            chart.update();
        }

        // Call the update function on initial load
        updateChart();
    </script>

    <!-- Include Footer (if you have one) -->
    <%- include('../partials/footer'); %>
</body>
</html>
